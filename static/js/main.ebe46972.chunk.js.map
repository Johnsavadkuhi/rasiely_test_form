{"version":3,"sources":["assets/icons/user.svg","assets/icons/email.svg","assets/icons/password.svg","components/Auth/TextBox.js","components/Auth/Submit.js","components/Auth/TexBoxValidation.js","services/getData.js","components/Auth/SignUp.js","components/Network/CheckInternet.js","components/Auth/AuthHeader/ButtonHeader.js","components/Auth/AuthHeader/AuthButtons.js","components/Auth/AuthHeader/index.js","components/Auth/AuthContainer.js","components/Auth/index.js","components/Error/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TextBox","props","iconSrc","restProps","formik","className","src","alt","Input","Submit","Button","type","children","TextBoxValidation","name","touched","firstname","errors","style","color","lastname","email","password","getData","values","data","firstName","lastName","body","JSON","stringify","campaignUuid","fetch","method","mode","headers","then","result","json","res","Swal","fire","title","text","code","icon","confirmButtonText","setFieldValue","catch","error","console","log","SignUp","validationSchema","Yup","required","min","useFormik","initialValues","onSubmit","Form","handleSubmit","id","userIconSrc","placeholder","onChange","handleChange","onBlur","handleBlur","value","valid","length","invalid","passIconSrc","CheckInternet","navigator","onLine","ButtonHeader","onClick","setLogin","login","AuthButtons","AuthHeader","buttonHeaderProps","AuthContainer","Auth","useState","ErrorBoundary","state","hasError","info","Error","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ebe46972.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.b0054a50.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.20aa87c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.d8591e22.svg\";","\nimport React from \"react\";\nimport { Input } from \"reactstrap\";\n\n\nfunction TextBox(props) {\n\n  const { iconSrc ,formik ,  ...restProps } = props;\n  return (\n    <>\n      <div className=\"inputs-text\">\n\n        <img src={iconSrc} alt=\"parallex img\" />\n\n        <Input {...restProps} />\n\n      </div>\n    \n\n    </>\n  );\n}\n\nexport default TextBox;\n","import React from 'react'; \nimport { Button } from \"reactstrap\";\n\nfunction Submit(props) { \n\n    return <>  <div className=\"btn-container\">\n    <Button type=\"submit\" className=\"form-button-login\">\n        {props.children}\n    </Button>\n  </div>\n</>\n}\n\nexport default Submit ; ","import React from 'react';\n\nfunction TextBoxValidation(props) {\n\n    const { formik, name } = props;\n\n    if (name === \"firstname\") {\n        return <>\n\n            {formik.touched.firstname && formik.errors.firstname ? (\n                <div style={{ color: \"red\" }}>{formik.errors.firstname}</div>\n            ) : null}\n\n        </>\n\n    }\n    if (name === \"lastname\") {\n        return <>\n\n            {formik.touched.lastname && formik.errors.lastname ? (\n                <div style={{ color: \"red\" }}>{formik.errors.lastname}</div>\n            ) : null}\n\n        </>\n    }\n    if (name === \"email\") {\n\n        return <>\n\n            {formik.touched.email && formik.errors.email ? (\n                <div style={{ color: \"red\" }}>{formik.errors.email}</div>\n            ) : null}\n\n        </>\n    }\n    if (name === \"password\") {\n        return <>\n\n            {formik.touched.password && formik.errors.password ? (\n                <div style={{ color: \"red\" }}>{formik.errors.password}</div>\n            ) : null}\n\n        </>\n    }\n\n\n}\n\nexport default TextBoxValidation; \n","import Swal from \"sweetalert2\";\n\nfunction getData(formik, values) {\n  const data = {\n    firstName: values.firstname,\n    lastName: values.lastName,\n    email: values.email,\n    password: values.password,\n  };\n\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  const body = JSON.stringify({\n    data,\n    campaignUuid: \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\n  });\n  const options = { method: \"POST\", mode: \"cors\", headers, body };\n\n  fetch(\"https://api.raisely.com/v3/signup\", options)\n    .then((result) => {\n      return result.json();\n    })\n    .then((res) => {\n      if (!res.errors) {\n        Swal.fire({\n          title: \"success!\",\n          text: \"successfully Regiestered Account!\",\n          icon: \"success\",\n          confirmButtonText: \"Ok\",\n        }).then(() => {\n          formik.setFieldValue(\"firstname\", \"\", false);\n          formik.setFieldValue(\"lastname\", \"\", false);\n          formik.setFieldValue(\"email\", \"\", false);\n          formik.setFieldValue(\"password\", \"\", false);\n        });\n      } else {\n        Swal.fire({\n          title: \"Error\",\n          text: `This account ${res.errors[0].code}`,\n          icon: \"error\",\n          confirmButtonText: \"Ok\",\n        }).then(() => {\n          formik.setFieldValue(\"email\", \"\");\n        });\n      }\n    })\n    .catch((error) => {\n      console.log(\"error :  \", error);\n    });\n}\nexport default getData;\n","import React from \"react\";\nimport { Form } from \"reactstrap\";\nimport TextBox from \"./TextBox\";\nimport Submit from \"./Submit\";\nimport iconSrc from \"../../assets/icons/email.svg\";\nimport passIconSrc from \"../../assets/icons/password.svg\";\nimport userIconSrc from \"../../assets/icons/user.svg\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextBoxValidation from \"./TexBoxValidation\";\nimport getData from \"../../services/getData\";\n\nfunction SignUp() {\n  const initialValues = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    firstname: Yup.string().required(\"Required\"),\n    lastname: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    password: Yup.string()\n      .min(8, \"Enter at least 8 characters!!\")\n      .required(\"Required\"),\n  });\n\n  const onSubmit = (values) => {\n    getData(formik, values);\n  };\n\n  const formik = useFormik({ initialValues, validationSchema, onSubmit });\n\n  return (\n    <Form className=\"sign-up\" onSubmit={formik.handleSubmit}>\n      <TextBox\n        id=\"firstname\"\n        iconSrc={userIconSrc}\n        type=\"text\"\n        placeholder=\"First Name \"\n        name=\"firstname\"\n        className=\"input-text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstname}\n        valid={\n          formik.values.firstname.length > 0\n            ? true &&\n              !(formik.touched.firstname && formik.errors.firstname\n                ? true\n                : false)\n            : false\n        }\n        invalid={\n          formik.touched.firstname && formik.errors.firstname ? true : false\n        }\n        formik={formik}\n      />\n      <TextBoxValidation formik={formik} name=\"firstname\" />\n\n      <TextBox\n        id=\"lastname\"\n        iconSrc={userIconSrc}\n        type=\"text\"\n        placeholder=\"Last Name \"\n        name=\"lastname\"\n        className=\"input-text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastname}\n        valid={\n          formik.values.lastname.length > 0\n            ? true &&\n              !(formik.touched.lastname && formik.errors.lastname\n                ? true\n                : false)\n            : false\n        }\n        invalid={\n          formik.touched.lastname && formik.errors.lastname ? true : false\n        }\n        formik={formik}\n      />\n      <TextBoxValidation formik={formik} name=\"lastname\" />\n\n      <TextBox\n        id=\"email\"\n        iconSrc={iconSrc}\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        className=\"input-text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n        valid={\n          formik.values.email.length > 0\n            ? true &&\n              !(formik.touched.email && formik.errors.email ? true : false)\n            : false\n        }\n        invalid={formik.touched.email && formik.errors.email ? true : false}\n        formik={formik}\n      />\n      <TextBoxValidation formik={formik} name=\"email\" />\n\n      <TextBox\n        id=\"password\"\n        iconSrc={passIconSrc}\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        className=\"input-text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.password}\n        valid={\n          formik.values.password.length > 0\n            ? true &&\n              !(formik.touched.password && formik.errors.password\n                ? true\n                : false)\n            : false\n        }\n        invalid={\n          formik.touched.password && formik.errors.password ? true : false\n        }\n        formik={formik}\n      />\n      <TextBoxValidation formik={formik} name=\"password\" />\n\n      <Submit children=\"Sign Up \" />\n    </Form>\n  );\n}\n\nexport default SignUp;\n","import React from 'react' ; \n\nfunction CheckInternet(props){\n\n    return <>\n    \n    {navigator.onLine  ? <>{props.children} </>: <div>No Internet <br/> please connect to internet to see form  </div>}\n    \n    </>\n}\n\nexport default CheckInternet ; \n","import React from \"react\";\n\nfunction ButtonHeader(props) {\n\n  return (\n    <>\n      <button\n        onClick={() => props.children=== \"SignIn\" ? props.setLogin(true) : props.setLogin(false)}\n        className={ props.children ===\"SignIn\"\n         ? `auth-btn-1 ${props.login ? \"active\" : \"\"} `\n         : `${!props.login ? \"active\" : \"\"} `}>\n\n        {props.children}\n      </button>\n    </>\n  );\n}\n\nexport default ButtonHeader ; \n","import React from 'react'; \n\n\nfunction AuthButtons(props){\n\n    return <>\n          <div className=\"auth-btns\">{props.children}</div>\n    \n    </>\n}\n\nexport default AuthButtons ; ","import React from \"react\";\nimport ButtonHeader from \"./ButtonHeader\";\nimport AuthButtons from \"./AuthButtons\";\n\nfunction AuthHeader({login , setLogin }) {\n\n const buttonHeaderProps = {login , setLogin}\n  \n return <AuthButtons>\n\n        <ButtonHeader {...buttonHeaderProps} >SignIn</ButtonHeader>\n\n        <ButtonHeader {...buttonHeaderProps} > SignUp </ButtonHeader>\n\n      </AuthButtons>\n\n}\n\nexport default AuthHeader;\n","import React from 'react' ; \n\nfunction AuthContainer(props){\n\n    return (\n\n    <div className=\"auth-container\">{props.children}</div>\n    )\n\n}\n\nexport default AuthContainer ; \n","import React, { useState } from \"react\";\nimport SignUp from \"./SignUp\";\nimport CheckInternet from '../Network/CheckInternet';\nimport AuthHeader from \"./AuthHeader\";\nimport AuthContainer from './AuthContainer';\n\nfunction Auth() {\n    const [login, setLogin] = useState(false);\n\n    return <AuthContainer >\n\n        <CheckInternet>\n\n            <AuthHeader login={login} setLogin={setLogin} />\n\n            {login ? (\n                <p>\n\n                    The Login Form\n\n                </p>\n            ) : (\n\n                    <SignUp />\n                )}\n        </CheckInternet>\n\n    </AuthContainer>\n}\n\n\nexport default Auth; \n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n  componentDidCatch(error, info) {\n    console.error(\"Error :\" + Error);\n    console.info(\"info : \" + info);\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport Auth from './Auth';\nimport ErrorBoundary from './Error';\n\nfunction App() {\n\n  return <ErrorBoundary>\n    <Auth />\n  </ErrorBoundary>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/main.scss'; \nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}